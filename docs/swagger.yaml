basePath: /
definitions:
  dto.BatchRequestDTO:
    properties:
      correlation_id:
        type: string
      original_url:
        type: string
    type: object
  dto.BatchResponseDTO:
    properties:
      correlation_id:
        type: string
      short_url:
        type: string
    type: object
  dto.ShortenRequestDTO:
    properties:
      url:
        type: string
    type: object
  dto.ShortenResponseDTO:
    properties:
      result:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: vladimirazanza@gmail.com
  description: This is a sample swagger for URL Shortener
  title: URL shortener API
  version: "1.0"
paths:
  /:
    post:
      consumes:
      - text/plain
      description: Create a short URL from the original URL
      parameters:
      - description: Original URL to be shortened
        in: body
        name: originalUrl
        required: true
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "201":
          description: Returns the shortened URL
          schema:
            type: string
      summary: Shorten a URL
      tags:
      - URLs
  /{id}:
    get:
      description: Redirects to the original URL using the short ID
      parameters:
      - description: Short URL ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "307":
          description: Redirects to original URL
        "404":
          description: Not found if short ID doesn't exist
          schema:
            type: string
        "408":
          description: Request timeout
          schema:
            type: string
      summary: Redirect to original URL
      tags:
      - URLs
  /api/shorten:
    post:
      consumes:
      - text/plain
      description: Create a short URL from the original URL
      parameters:
      - description: Original URL to be shortened
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ShortenRequestDTO'
      produces:
      - text/plain
      responses:
        "201":
          description: Returns the shortened URL
          schema:
            $ref: '#/definitions/dto.ShortenResponseDTO'
        "500":
          description: When internal server error occurs
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Shorten a URL
      tags:
      - API
  /api/shorten/batch:
    post:
      consumes:
      - application/json
      description: Accepts a batch of URLs and returns their shortened versions
      parameters:
      - description: Array of URLs to shorten
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.BatchRequestDTO'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Returns an array of shortened URLs
          schema:
            items:
              $ref: '#/definitions/dto.BatchResponseDTO'
            type: array
        "400":
          description: When request body is invalid or empty
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: When internal server error occurs
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Shorten multiple URLs in a single request
      tags:
      - API
  /ping:
    get:
      consumes:
      - application/json
      description: Ping to the DB
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Can not connect to the Database
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verifies the connection to the DB
      tags:
      - DB
swagger: "2.0"
